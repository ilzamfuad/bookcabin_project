// Code generated by MockGen. DO NOT EDIT.
// Source: repository/voucher_repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	model "bookcabin_project/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockVoucherRepository is a mock of VoucherRepository interface.
type MockVoucherRepository struct {
	ctrl     *gomock.Controller
	recorder *MockVoucherRepositoryMockRecorder
}

// MockVoucherRepositoryMockRecorder is the mock recorder for MockVoucherRepository.
type MockVoucherRepositoryMockRecorder struct {
	mock *MockVoucherRepository
}

// NewMockVoucherRepository creates a new mock instance.
func NewMockVoucherRepository(ctrl *gomock.Controller) *MockVoucherRepository {
	mock := &MockVoucherRepository{ctrl: ctrl}
	mock.recorder = &MockVoucherRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVoucherRepository) EXPECT() *MockVoucherRepositoryMockRecorder {
	return m.recorder
}

// CreateVoucher mocks base method.
func (m *MockVoucherRepository) CreateVoucher(voucher model.Voucher) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVoucher", voucher)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateVoucher indicates an expected call of CreateVoucher.
func (mr *MockVoucherRepositoryMockRecorder) CreateVoucher(voucher interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVoucher", reflect.TypeOf((*MockVoucherRepository)(nil).CreateVoucher), voucher)
}

// GetVoucherCountByFlighNumberAndDate mocks base method.
func (m *MockVoucherRepository) GetVoucherCountByFlighNumberAndDate(flight_number, date string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVoucherCountByFlighNumberAndDate", flight_number, date)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVoucherCountByFlighNumberAndDate indicates an expected call of GetVoucherCountByFlighNumberAndDate.
func (mr *MockVoucherRepositoryMockRecorder) GetVoucherCountByFlighNumberAndDate(flight_number, date interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVoucherCountByFlighNumberAndDate", reflect.TypeOf((*MockVoucherRepository)(nil).GetVoucherCountByFlighNumberAndDate), flight_number, date)
}
